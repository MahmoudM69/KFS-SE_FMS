@using DataAcesss.Data.Shared
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager
@inject RoleManager<IdentityRole> roleManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpContextAccessor httpContextAccessor

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Server</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
        <li class="nav-item px-3">
                <NavLink class="nav-link" href="EstablishmentList">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Establishment Menu
                </NavLink>
        </li>
        @if(role == "Customer")
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Orders">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Orders
                </NavLink>
            </li>    
        }
        @if (role == "Admin" || role == "Manager" || role == "Employee")
        {
            <li class="nav-item px-3">
                    <NavLink class="nav-link" href="PaymentPages">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Payment
                </NavLink>
            </li>
            @if (role == "Admin" || role == "Manager")
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="ProductType">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Product Type
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                        <NavLink class="nav-link" href="FinancialAidPages">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Financial Aid
                    </NavLink>
                </li>
                @if (role == "Admin")
                {
                    <li class="nav-item px-3">
                            <NavLink class="nav-link" href="Establishment">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Establishment
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                            <NavLink class="nav-link" href="EstablishmentType">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Establishment Type
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                            <NavLink class="nav-link" href="PaymentServicesPages">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Payment Service
                        </NavLink>
                    </li>
                }
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="identity/account/register">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Register Employee
                    </NavLink>
                </li>
            }
        }
    </ul>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private ApplicationUser CurrUser { get; set; } = new();
    private string role { get; set; }
    protected override Task OnInitializedAsync()
    {
        if(httpContextAccessor.HttpContext.User.Claims == null || !httpContextAccessor.HttpContext.User.Claims.Any())
        {
            role = "";
        }
        else if(httpContextAccessor.HttpContext.User.IsInRole("Admin"))
        {
            role = "Admin";
        }else if(httpContextAccessor.HttpContext.User.IsInRole("Manager"))
        {
            role = "Manager";
        }else if(httpContextAccessor.HttpContext.User.IsInRole("Employee"))
        {
            role = "Employee";
        }else if(httpContextAccessor.HttpContext.User.IsInRole("Customer"))
        {
            role = "Customer";
        }
        return base.OnInitializedAsync();
    }
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
