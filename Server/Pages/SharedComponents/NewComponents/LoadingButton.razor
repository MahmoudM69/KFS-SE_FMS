<MudButton Disabled="@IsDisabled" ButtonType="@ButtonType" OnClick="@(e => Clicked(e))" Variant="@Variant" Color="@Color" Class="@Class" style="@Style">
    @if (IsLoading)
    {
        <MudProgressCircular Class="mr-1" Size="Size.Small" Indeterminate="true" />
    }

    @if(ChildContent is not null)
    {
        @ChildContent
    }
    else
    {
        @if(Icon != null)
        {
            <MudIcon Icon="@Icon" Color="@IconColor" />
        }
        @(IsLoading ? $"{Verb ?? $"{Label}ing"}" : Label)
    }
</MudButton>

@code{
    [Parameter]
    public bool IsClicked { get; set; } = false;
    
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public ButtonType ButtonType { get; set; } = ButtonType.Button;

    [Parameter]
    public Variant Variant { get; set; } = Variant.Filled;

    [Parameter]
    public Color Color { get; set; } = Color.Primary;

    [Parameter]
    public string Class { get; set; } = string.Empty;

    [Parameter]
    public string Style { get; set; } = string.Empty;

    [Parameter]
    public string Icon { get; set; } = string.Empty;

    [Parameter]
    public Color IconColor { get; set; } = Color.Primary;

    [Parameter]
    public string Label { get; set; } = "Label";

    [Parameter]
    public string Verb { get; set; } = string.Empty;

    [Parameter]
    public bool IsLoading { get; set; } = false;

    [Parameter]
    public bool IsDisabled { get; set; } = false;

    [Parameter]
    public bool LoadOnClick { get; set; } = true;

    [Parameter]
    public bool DisableOnClick { get; set; } = true;

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    private async Task Clicked(MouseEventArgs e)
    {
        ToLoad();
        if (OnClick.HasDelegate) await OnClick.InvokeAsync(e);
        else await Task.Delay(500);
        ToDefault();
    }

    public void ToLoad()
    {
        IsClicked = true;
        if (LoadOnClick) IsLoading = true;
        if (DisableOnClick) IsDisabled = true;
    }

    public void ToDefault()
    {
        IsClicked = false;
        IsLoading = false;
        IsDisabled = false;
    }
}